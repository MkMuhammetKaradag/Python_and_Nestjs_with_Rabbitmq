# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Interest {
  _id: ID!
  name: String!
}

type User {
  _id: ID!
  firstName: String!
  lastName: String!
  email: String!
  profilePhoto: Float
  roles: [UserRole!]!
  isDeleted: Boolean!
  deletedAt: String
  createdAt: String!
  updatedAt: String!
  interests: [Interest!]
}

"""User roles"""
enum UserRole {
  ADMIN
  USER
}

type Tag {
  _id: ID!
  name: String!
}

type Media {
  url: String!
  type: MediaType!
  caption: String
}

"""Type of media content"""
enum MediaType {
  IMAGE
  VIDEO
}

type Post {
  _id: ID!
  userId: ID!
  media: [Media!]!
  title: String!
  status: PostStatus!
  createdAt: String!
  updatedAt: String!
  tags: [Tag!]
}

"""Status of the post"""
enum PostStatus {
  PUBLISHED
  DRAFT
}

type RegisterUserObject {
  activationToken: String!
}

type LoginUserObject {
  user: User
  access_token: String!
  refresh_token: String!
}

type SignUrlOutput {
  signature: String!
  timestamp: Float!
  cloudName: String!
  apiKey: String!
}

type Query {
  getQuery: String!
  getMe: User!
  protectedQuery: String!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  loginUser(input: LoginUserInput!): LoginUserObject!
  registerUser(input: RegisterUserInput!): RegisterUserObject!
  activationUser(input: ActivationUserInput!): User!
  createPost(input: CreatePostInput!): Post!
  getSignedUploadUrl(input: SignUrlInput!): SignUrlOutput!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  roles: [UserRole!]! = [USER]
}

input LoginUserInput {
  email: String!
  password: String!
}

input RegisterUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  roles: [UserRole!]! = [USER]
}

input ActivationUserInput {
  activationToken: String!
  activationCode: String!
}

input CreatePostInput {
  title: String!
  media: [CreateMediaInput!]!
}

input CreateMediaInput {
  url: String!
  type: MediaType!
}

input SignUrlInput {
  publicId: String!
}